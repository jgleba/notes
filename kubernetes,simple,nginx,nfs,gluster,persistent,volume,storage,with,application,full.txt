
#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
#@  
#@  KUBERNETES APP FULL
#@  
#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   2020-02-08[Feb-Sat]13-19PM 

CREATE PersistentVolume
CREATE PersistentVolumeClaim
CREATE Deployment
CREATE EXPOSE SERVICE FROM Deployment
CREATE Ingress

==

[user@kube1haproxy1 ~]$ cat 4-pv-nfs.yaml

apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-nfs-pv1
  labels:
    type: local
spec:
  storageClassName: nfs1
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  nfs:
    server: 172.16.3.167
    path: "/mnt/gl"

apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-nfs-pv1
  labels:
    type: local
spec:
  storageClassName: nfs1
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  nfs:
    server: 172.16.3.170
    path: "/home/nfskube1"
	
[user@kube1haproxy1 ~]$ cat 4-pvc-nfs.yaml

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-nfs-pv1
spec:
  storageClassName: nfs1
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
	  
[user@kube1haproxy1 ~]$ cat 4-nfs-nginx.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: nginx
  name: nginx-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      run: nginx
  template:
    metadata:
      labels:
        run: nginx
    spec:
      volumes:
      - name: www
        persistentVolumeClaim:
          claimName: pvc-nfs-pv1
      containers:
      - image: nginx
        name: nginx
        volumeMounts:
        - name: www
          mountPath: /usr/share/nginx/html
		  
[user@kube1haproxy1 ~]$ cat 4-nfs-nginx-service.yaml

apiVersion: v1
kind: Service
metadata:
  name: nginx-deploy-service
  labels:
    app: nginx
spec:
  type: LoadBalancer
  ports:
    - port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: nginx-deploy

	[user@kube1haproxy1 ~]$ cat 4-nfs-nginx-ingress.yaml

kind: Ingress
apiVersion: extensions/v1beta1
metadata:
  name: "nginx-deploy-ingress"
  namespace: default
spec:
  rules:
    - host: nginx.kube1.jgleba.com
      http:
        paths:
          - path: /
            backend:
              serviceName: nginx-deploy-service
              servicePort: 80
			    
			==
			
kind: Ingress
apiVersion: extensions/v1beta1
metadata:
  name: "nginx2-ingress"
  namespace: default
spec:
  rules:
    - host: nginx2.kube1.jgleba.com
      http:
        paths:
          - path: /
            backend:
              serviceName: nginx2-service
              servicePort: 80
